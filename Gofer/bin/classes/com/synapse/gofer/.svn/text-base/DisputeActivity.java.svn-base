package com.synapse.gofer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.synapse.gofer.model.ResultData;
import com.synapse.gofer.parser.DataPostParser;
import com.synapse.gofer.util.Constants;

public class DisputeActivity extends Activity implements OnClickListener {

	EditText edityourname, editothername, editjobdate, editjobname,
			editdiscript;
	Button btnshow_traffic;
	TextView btnBack;
	private ProgressDialog progressBar;
	public static final int SUCCESS = 1;
	public static final int FAILURE = 2;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.dispute_detail);
		Log.e("VIPI", "OP > " + Constants.uid);
		init();
	}

	private void init() {
		edityourname = (EditText) findViewById(R.id.edityourname);
		editothername = (EditText) findViewById(R.id.editothername);
		editjobdate = (EditText) findViewById(R.id.editjobdate);
		editjobname = (EditText) findViewById(R.id.editjobname);
		editdiscript = (EditText) findViewById(R.id.editdiscript);
		btnshow_traffic = (Button) findViewById(R.id.btnshow_traffic);
		btnBack = (TextView) findViewById(R.id.btnBack);
		btnBack.setOnClickListener(this);
		btnshow_traffic.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		if (v == btnshow_traffic) {
			doSubmit();
		}

		if (v == btnBack) {
			onBackPressed();
		}
	}

	/*
	 * To Submit Record.
	 */
	private void doSubmit() {
		progressBar = new ProgressDialog(DisputeActivity.this);
		progressBar.setMessage("Please wait...");
		progressBar.setCancelable(false);
		progressBar.show();

		Thread thr = new Thread(new Runnable() {
			// @Override
			public void run() {
				ArrayList<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
				nameValuePairs.add(new BasicNameValuePair("user_id",
						Constants.uid));

				// DataPostParser parser1 = new
				// DataPostParser(Constants.HTTP_HOST+"getCutomerid"); //STRIPE
				DataPostParser parser1 = new DataPostParser(Constants.HTTP_HOST
						+ "getPaypalId"); // PAYPAL

				ResultData postdata1 = parser1.getParseData(nameValuePairs);
				try {
					Constants.uemail = postdata1.getUserEmail();
				} catch (Exception e) {

				}

				Constants.uemail = postdata1.getUserEmail();

				// @Ashish
				MultipartEntity reqEntity = new MultipartEntity(
						HttpMultipartMode.BROWSER_COMPATIBLE);
				try {
					reqEntity.addPart("user_id", new StringBody(Constants.uid));
					reqEntity.addPart("job_date", new StringBody(editjobdate
							.getText().toString()));
					reqEntity.addPart("job_name", new StringBody(editjobname
							.getText().toString()));
					reqEntity.addPart("other_name", new StringBody(
							editothername.getText().toString()));
					reqEntity.addPart("your_name", new StringBody(edityourname
							.getText().toString()));
					reqEntity.addPart("dispute_description", new StringBody(
							editdiscript.getText().toString()));

				} catch (UnsupportedEncodingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				HttpClient httpclient = new DefaultHttpClient();
				HttpPost httppost = new HttpPost(Constants.HTTP_HOST
						+ "dispute");
				httppost.setEntity(reqEntity);

				// Execute HTTP Post Request
				HttpResponse response = null;
				try {
					response = httpclient.execute(httppost);
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				Log.e("Response when submitting request", "" + response);
				HttpEntity entity = response.getEntity();
				ResultData resultData = null;

				try {

					InputStream stream = entity.getContent();
					String strResponse = convertStreamToString(stream);
					JSONObject jsonresponse = new JSONObject(strResponse);
					Log.e("VIPI", "Response >" + jsonresponse);
					resultData = new ResultData();
					resultData.setAuthenticated(jsonresponse
							.getString("status"));
					try {
						resultData.setMessage(jsonresponse.getString("message"));
						// resultData.setMessage(jsonresponse.getString("id"));
					} catch (Exception ex) {
						ex.printStackTrace();
					}

				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				progressBar.dismiss();

				Message msg = handler.obtainMessage();
				if (resultData != null) {
					msg.obj = resultData;
					msg.arg1 = SUCCESS;
				} else {
					msg.arg1 = FAILURE;
				}
				handler.sendMessage(msg);

			}
		});
		thr.start();
	}

	public String dateFormatChange(String date) {

		SimpleDateFormat newDateFormat = new SimpleDateFormat(
				"dd/MM/yyyy HH:mm:ss");
		Date MyDate = null;
		try {
			MyDate = newDateFormat.parse(date);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		newDateFormat.applyPattern("yyyy-MM-dd HH:mm:ss");
		return newDateFormat.format(MyDate);
	}

	public String convertStreamToString(InputStream is) {
		BufferedReader reader = new BufferedReader(new InputStreamReader(is));
		StringBuilder sb = new StringBuilder();
		String line = null;
		try {
			while ((line = reader.readLine()) != null) {
				sb.append(line + "\n");
			}
		} catch (Exception e) {
			Log.e("HttpReaderException", ">>>" + e.getMessage());
		}
		return sb.toString();
	}

	/*
	 * Handler.
	 */
	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			super.handleMessage(msg);

			if (msg.obj instanceof ResultData) {
				ResultData data = (ResultData) msg.obj;
				if (data.getAuthenticated() != null
						&& data.getAuthenticated().equalsIgnoreCase("success")) {
					showAlert(data.getMessage(), true);
				} else {
					// showAlertDialog(data.getMessage());
					showAlert(data.getMessage(), false);
				}
			}

		}
	};

	private void showAlert(String message, final boolean is_success) {
		new AlertDialog.Builder(DisputeActivity.this).setTitle("Dispute Add")
				.setMessage(message)
				.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {
						// continue with delete
						if (is_success) {
							DisputeActivity.this.finish();
						} else {
							// dismissDialog(id)
						}
					}
				}).setIcon(android.R.drawable.ic_dialog_info).show();
	}

}
